x-environment: &default-environment
  TZ: Asia/Taipei
  MARIADB_DATABASE: example
  MARIADB_USER: eva
  MARIADB_PASSWORD_FILE: /run/secrets/user-password
  MARIADB_HOST: db

networks:
  default:
  docker-proxy:
  db-net:

volumes:
  db-data:

secrets:
  root-password:
    file: db_assets/security/root-password
  user-password:
    file: db_assets/security/user-password

services:
  db:
    image: mariadb:lts
    restart: always
    environment:
      <<: *default-environment
      MARIADB_ROOT_PASSWORD_FILE: /run/secrets/root-password
    networks:
      - db-net
    secrets:
      - root-password
      - user-password
    volumes:
      - db-data:/var/lib/mysql
      - ./data:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 2m
      start_interval: 10s
      interval: 3s
      timeout: 5s
      retries: 3

  crawler:
    build:
      context: .
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      <<: *default-environment
      PYTHONUNBUFFERED: 1
    networks:
      - db-net
    secrets:
      - user-password

  backup:
    build:
      context: services/backup
    restart: always
    depends_on:
      db:
        condition: service_healthy
    stop_grace_period: 30s
    environment:
      <<: *default-environment
      MAX_BACKUPS: 30
    networks:
      - db-net
    secrets:
      - user-password
    volumes:
      - ./db_assets/data:/app/data

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    restart: unless-stopped
    environment:
      CONTAINERS: 1
    networks:
      - docker-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: wget --spider http://localhost:2375/version || exit 1
      start_period: 2m
      start_interval: 10s
      interval: 3s
      timeout: 5s
      retries: 3
    privileged: true

  traefik:
    build:
      context: services/traefik
    depends_on:
      docker-socket-proxy:
        condition: service_healthy
    environment:
      DOMAIN: ${DOMAIN}
      ACME_EMAIL: ${ACME_EMAIL}
    networks:
      - default
      - docker-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./services/traefik/letsencrypt:/letsencrypt

  web:
    build:
      context: .
      dockerfile: services/web/Dockerfile
    develop:
      watch:
        - path: services/web/main.py
          action: rebuild
    restart: always
    depends_on:
      traefik:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      <<: *default-environment
    networks:
      - docker-proxy
      - default
      - db-net
    expose: 
      - "8000"
    labels:
      - traefik.enable=true
      - traefik.docker.network=taiwan_stock_analysis_default
      - traefik.http.routers.web.rule=Host(`$DOMAIN`)
      - traefik.http.routers.whoami.entrypoints=websecure
      - traefik.http.routers.web.tls=true
      - traefik.http.routers.web.tls.certresolver=myresolver
      - traefik.http.middlewares.test-compress.compress=true
      - traefik.http.middlewares.test-auth.basicauth.usersfile=./password
    secrets:
      - user-password
